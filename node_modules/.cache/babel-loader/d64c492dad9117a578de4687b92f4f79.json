{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/natalietam/Documents/GitHub/the-shoppies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddFavourite from './components/AddFavourite';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport RemoveFavourites from './components/RemoveFavourites';\nimport SearchBox from './components/SearchBox';\nimport ResultCard from './components/ResultCard';\n\nconst App = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [favourites, setFavourites] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const getMovieRequest = async searchValue => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=15d60055`;\n    const dataUrl = `http://www.omdbapi.com/?t=${searchValue}&apikey=15d60055`;\n    const responseData = await fetch(dataUrl);\n    const response = await fetch(url);\n    const responseDataJson = await responseData.json();\n    const responseJson = await response.json();\n    console.log(responseDataJson);\n    console.log(responseJson);\n\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  };\n\n  useEffect(() => {\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n  useEffect(() => {\n    const movieFavourites = JSON.parse(localStorage.getItem('movie-app'));\n    setFavourites(movieFavourites);\n  }, []);\n\n  const saveToLocalStorage = items => {\n    // Saving past nominations as a JSON string\n    localStorage.setItem('movie-app', JSON.stringify(items));\n  };\n\n  const addNominatedMovie = movie => {\n    if (favourites.length < 5) {\n      const newFavouriteList = [...favourites, movie];\n      setFavourites(newFavouriteList);\n      saveToLocalStorage(newFavouriteList);\n      setIsSubmitting(true);\n    }\n  };\n\n  const removeNominatedMovie = movie => {\n    const newFavouriteList = favourites.filter(favourite => favourite.imdbID !== movie.imdbID);\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid movie-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"The Shoppies!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(ResultCard, {\n        movie: movie,\n        watchList: favourites,\n        handleFavouritesClick: addNominatedMovie,\n        favouriteComponent: AddFavourite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex align-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Nominations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: favourites,\n        handleFavouritesClick: removeNominatedMovie,\n        favouriteComponent: RemoveFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"ERlkxJOgnM3V6Rwm7MRGXzu1b68=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/natalietam/Documents/GitHub/the-shoppies/src/App.js"],"names":["React","useEffect","useState","AddFavourite","MovieList","MovieListHeading","RemoveFavourites","SearchBox","ResultCard","App","movies","setMovies","searchValue","setSearchValue","favourites","setFavourites","isSubmitting","setIsSubmitting","getMovieRequest","url","dataUrl","responseData","fetch","response","responseDataJson","json","responseJson","console","log","Search","movieFavourites","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","addNominatedMovie","movie","length","newFavouriteList","removeNominatedMovie","filter","favourite","imdbID","map"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMgB,eAAe,GAAG,MAAON,WAAP,IAAuB;AAC7C,UAAMO,GAAG,GAAI,6BAA4BP,WAAY,kBAArD;AACA,UAAMQ,OAAO,GAAI,6BAA4BR,WAAY,kBAAzD;AACA,UAAMS,YAAY,GAAG,MAAMC,KAAK,CAACF,OAAD,CAAhC;AACF,UAAMG,QAAQ,GAAG,MAAMD,KAAK,CAACH,GAAD,CAA5B;AAEE,UAAMK,gBAAgB,GAAG,MAAMH,YAAY,CAACI,IAAb,EAA/B;AACF,UAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACE,IAAT,EAA3B;AAEEE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAEA,QAAIA,YAAY,CAACG,MAAjB,EAAyB;AAC1BlB,MAAAA,SAAS,CAACe,YAAY,CAACG,MAAd,CAAT;AACA;AACA,GAfD;;AAiBD5B,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,eAAe,CAACN,WAAD,CAAf;AACA,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAICX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,eAAe,GAAGC,IAAI,CAACC,KAAL,CACtBC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADsB,CAAxB;AAGAnB,IAAAA,aAAa,CAACe,eAAD,CAAb;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMK,kBAAkB,GAAIC,KAAD,IAAW;AACpC;AACAH,IAAAA,YAAY,CAACI,OAAb,CAAqB,WAArB,EAAkCN,IAAI,CAACO,SAAL,CAAeF,KAAf,CAAlC;AACD,GAHD;;AAKA,QAAMG,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAI1B,UAAU,CAAC2B,MAAX,GAAoB,CAAxB,EAA0B;AACxB,YAAMC,gBAAgB,GAAG,CAAC,GAAG5B,UAAJ,EAAgB0B,KAAhB,CAAzB;AACAzB,MAAAA,aAAa,CAAC2B,gBAAD,CAAb;AACAP,MAAAA,kBAAkB,CAACO,gBAAD,CAAlB;AACAzB,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAPD;;AASA,QAAM0B,oBAAoB,GAAIH,KAAD,IAAW;AACtC,UAAME,gBAAgB,GAAG5B,UAAU,CAAC8B,MAAX,CACtBC,SAAD,IAAeA,SAAS,CAACC,MAAV,KAAqBN,KAAK,CAACM,MADnB,CAAzB;AAGA/B,IAAAA,aAAa,CAAC2B,gBAAD,CAAb;AACAP,IAAAA,kBAAkB,CAACO,gBAAD,CAAlB;AACD,GAND;;AAQA,sBACA;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE9B,WAAxB;AAAqC,QAAA,cAAc,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKC;AAAA,gBACMH,MAAM,CAACqC,GAAP,CAAYP,KAAD,iBACV,QAAC,UAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,SAAS,EAAE1B,UAFb;AAGE,QAAA,qBAAqB,EAAEyB,iBAHzB;AAIE,QAAA,kBAAkB,EAAEpC;AAJtB;AAAA;AAAA;AAAA;AAAA,cADD;AADN;AAAA;AAAA;AAAA;AAAA,YALD,eAeI;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfJ,eAkBI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAEW,UADV;AAEE,QAAA,qBAAqB,EAAE6B,oBAFzB;AAGE,QAAA,kBAAkB,EAAErC;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BD,CApFD;;GAAMG,G;;KAAAA,G;AAsFN,eAAeA,GAAf","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddFavourite from './components/AddFavourite';\nimport MovieList from './components/MovieList';\nimport MovieListHeading from './components/MovieListHeading';\nimport RemoveFavourites from './components/RemoveFavourites';\nimport SearchBox from './components/SearchBox';\nimport ResultCard from './components/ResultCard';\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [favourites, setFavourites] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const getMovieRequest = async (searchValue) => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=15d60055`;\n    const dataUrl = `http://www.omdbapi.com/?t=${searchValue}&apikey=15d60055`\n    const responseData = await fetch(dataUrl)\n\t\tconst response = await fetch(url);\n\n    const responseDataJson = await responseData.json()\n\t\tconst responseJson = await response.json();\n\n    console.log(responseDataJson);\n    console.log(responseJson);\n\n    if (responseJson.Search) {\n\t\t\tsetMovies(responseJson.Search);\n\t\t}\n  };\n\n\tuseEffect(() => {\n\t\tgetMovieRequest(searchValue);\n\t}, [searchValue]);\n\n  useEffect(() => {\n    const movieFavourites = JSON.parse(\n      localStorage.getItem('movie-app')\n    );\n    setFavourites(movieFavourites)\n  }, []);\n\n  const saveToLocalStorage = (items) => {\n    // Saving past nominations as a JSON string\n    localStorage.setItem('movie-app', JSON.stringify(items))\n  };\n\n  const addNominatedMovie = (movie) => {\n    if (favourites.length < 5){\n      const newFavouriteList = [...favourites, movie]\n      setFavourites(newFavouriteList);\n      saveToLocalStorage(newFavouriteList)\n      setIsSubmitting(true)\n    }\n  };\n\n  const removeNominatedMovie = (movie) => {\n    const newFavouriteList = favourites.filter(\n      (favourite) => favourite.imdbID !== movie.imdbID\n    );\n    setFavourites(newFavouriteList);\n    saveToLocalStorage(newFavouriteList)\n  };\n\n  return (\n\t\t<div className='container-fluid movie-app'>\n      <div className='row d-flex align-items-center mt-4 mb-4'>\n        <MovieListHeading heading='The Shoppies!' />\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n      </div>\n\t\t\t<div>\n        {movies.map((movie) => (\n          <ResultCard\n            movie={movie}\n            watchList={favourites}\n            handleFavouritesClick={addNominatedMovie}\n            favouriteComponent={AddFavourite}\n          />\n        ))}\n      </div>\n      <div className='row d-flex align-items-center mt-4 mb-4'>\n        <MovieListHeading heading='Nominations' />\n      </div>\n      <div className='row'>\n        <MovieList\n          movies={favourites}\n          handleFavouritesClick={removeNominatedMovie}\n          favouriteComponent={RemoveFavourites}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}